import java.nio.file.Files
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'java'
}

ext {
    snakeYamlVersion = '2.2'
    shadowGradlePluginVersion = '7.1.2'
}

repositories {
    mavenCentral()
}

shadowJar {
    archiveClassifier.set('')
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation fileTree(dir: "/usr/share/logstash", include: "**/logstash-core.jar")

    // Include the Azure SDK BOM to manage dependency versions automatically
    implementation platform('com.azure:azure-sdk-bom:1.2.7')

    // Use Azure Monitor Ingestion SDK (version managed by BOM)
    implementation 'com.azure:azure-monitor-ingestion:1.2.7'

    // Azure Identity for authentication (version managed by BOM)
    implementation 'com.azure:azure-identity'

    // JSON Handling (Jackson)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jruby:jruby-complete:9.1.13.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.9.1'
    
}

clean {
    delete "${projectDir}/Gemfile"
    delete "${projectDir}/lib/"
    delete "${projectDir}/vendor/"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.register("vendor"){
    dependsOn shadowJar
    doLast {
        String vendorPathPrefix = "vendor/jar-dependencies"
        String projectGroupPath = project.group.replaceAll('\\.', '/')
        Files.copy(file("$buildDir/libs/${project.name}-${project.version}.jar").toPath(), projectJarFile.toPath(), REPLACE_EXISTING)
        validatePluginJar(projectJarFile, project.group)
    }
}

tasks.register("generateRubySupportFiles") {
    doLast {
        generateRubySupportFilesForPlugin(project.description, project.group, version)
    }
}
